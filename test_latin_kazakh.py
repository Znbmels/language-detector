#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
"""

import sys
sys.path.append('langdetect')
import langdetect as ld

def test_latin_kazakh():
    print("üî§ –¢–ï–°–¢ –õ–ê–¢–ò–ù–°–ö–û–ì–û –ö–ê–ó–ê–•–°–ö–û–ì–û –Ø–ó–´–ö–ê")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏
    print("–ó–∞–≥—Ä—É–∑–∫–∞ —è–∑—ã–∫–æ–≤—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π...")
    profiles = ld.create_languages_profiles()
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(profiles)} –ø—Ä–æ—Ñ–∏–ª–µ–π\n")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–æ–º –∫–∞–∑–∞—Ö—Å–∫–æ–º
    latin_kazakh_texts = [
        {
            'text': "men super balamyn",
            'translation': "–º–µ–Ω —Å—É–ø–µ—Ä –±–∞–ª–∞–º—ã–Ω",
            'description': "–ö–æ—Ä–æ—Ç–∫–∞—è —Ñ—Ä–∞–∑–∞"
        },
        {
            'text': "Qazaqstan - menin Otanym!",
            'translation': "“ö–∞–∑–∞“õ—Å—Ç–∞–Ω - –º–µ–Ω—ñ“£ –û—Ç–∞–Ω—ã–º!",
            'description': "–§—Ä–∞–∑–∞ –ø—Ä–æ –†–æ–¥–∏–Ω—É"
        },
        {
            'text': "Almaty - Qazaqstannyn en iri qalasy",
            'translation': "–ê–ª–º–∞—Ç—ã - “ö–∞–∑–∞“õ—Å—Ç–∞–Ω–Ω—ã“£ –µ“£ —ñ—Ä—ñ “õ–∞–ª–∞—Å—ã",
            'description': "–ü—Ä–æ –ê–ª–º–∞—Ç—ã"
        },
        {
            'text': "Abay Qunanbaiuly qazaqtyn uly aqyny",
            'translation': "–ê–±–∞–π “ö“±–Ω–∞–Ω–±–∞–π“±–ª—ã “õ–∞–∑–∞“õ—Ç—ã“£ “±–ª—ã –∞“õ—ã–Ω—ã",
            'description': "–ü—Ä–æ –ê–±–∞—è"
        },
        {
            'text': "Nauryz merekesi koktemnin keluin bildiredi",
            'translation': "–ù–∞—É—Ä—ã–∑ –º–µ—Ä–µ–∫–µ—Å—ñ –∫”©–∫—Ç–µ–º–Ω—ñ“£ –∫–µ–ª—É—ñ–Ω –±—ñ–ª–¥—ñ—Ä–µ–¥—ñ",
            'description': "–ü—Ä–æ –ù–∞—É—Ä—ã–∑"
        },
        {
            'text': "Qazaq tili turki tiller tobyna zhatatyn til",
            'translation': "“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ —Ç“Ø—Ä–∫—ñ —Ç—ñ–ª–¥–µ—Ä —Ç–æ–±—ã–Ω–∞ –∂–∞—Ç–∞—Ç—ã–Ω —Ç—ñ–ª",
            'description': "–ü—Ä–æ –∫–∞–∑–∞—Ö—Å–∫–∏–π —è–∑—ã–∫"
        }
    ]
    
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –õ–ê–¢–ò–ù–°–ö–û–ì–û –ö–ê–ó–ê–•–°–ö–û–ì–û:")
    print("-" * 50)
    
    for i, test_case in enumerate(latin_kazakh_texts, 1):
        text = test_case['text']
        translation = test_case['translation']
        description = test_case['description']
        
        print(f"\n{i}. {description}")
        print(f"   –õ–∞—Ç–∏–Ω—Å–∫–∏–π: {text}")
        print(f"   –ö–∏—Ä–∏–ª–ª–∏—Ü–∞: {translation}")
        
        try:
            result = ld.detect_language(text, profiles)
            result_list = list(result)
            
            if result_list:
                detected_lang = result_list[0][0]
                confidence = result_list[0][1]
                
                print(f"   üéØ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ: {detected_lang} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.1%})")
                print(f"   üìä –í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {result_list[:3]}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if detected_lang == 'kk':
                    print("   ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û! –°–∏—Å—Ç–µ–º–∞ —É–∑–Ω–∞–ª–∞ –∫–∞–∑–∞—Ö—Å–∫–∏–π")
                else:
                    print(f"   ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û! –û–ø—Ä–µ–¥–µ–ª–∏–ª–∞ –∫–∞–∫ {detected_lang}")
                    print("   üí° –ü—Ä–æ–±–ª–µ–º–∞: –ª–∞—Ç–∏–Ω—Å–∫–∏–π –∫–∞–∑–∞—Ö—Å–∫–∏–π –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è")
            else:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π
    print(f"\nüîÑ –°–†–ê–í–ù–ï–ù–ò–ï –° –ö–ò–†–ò–õ–õ–ò–¶–ï–ô:")
    print("-" * 50)
    
    comparison_texts = [
        ("men super balamyn", "–º–µ–Ω —Å—É–ø–µ—Ä –±–∞–ª–∞–º—ã–Ω"),
        ("Qazaqstan", "“ö–∞–∑–∞“õ—Å—Ç–∞–Ω"),
        ("Almaty", "–ê–ª–º–∞—Ç—ã"),
        ("Abay", "–ê–±–∞–π")
    ]
    
    for latin, cyrillic in comparison_texts:
        print(f"\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ: '{latin}' vs '{cyrillic}'")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–∞—Ç–∏–Ω—Å–∫–∏–π
        latin_result = ld.detect_language(latin, profiles)
        latin_list = list(latin_result)
        print(f"  –õ–∞—Ç–∏–Ω—Å–∫–∏–π: {latin_list[0] if latin_list else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∏—Ä–∏–ª–ª–∏—Ü—É
        cyrillic_result = ld.detect_language(cyrillic, profiles)
        cyrillic_list = list(cyrillic_result)
        print(f"  –ö–∏—Ä–∏–ª–ª–∏—Ü–∞: {cyrillic_list[0] if cyrillic_list else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}")
    
    print(f"\nüìã –í–´–í–û–î–´:")
    print("-" * 50)
    print("1. –°–∏—Å—Ç–µ–º–∞ –æ–±—É—á–µ–Ω–∞ –Ω–∞ –∫–∏—Ä–∏–ª–ª–∏—á–µ—Å–∫–æ–º –∫–∞–∑–∞—Ö—Å–∫–æ–º")
    print("2. –õ–∞—Ç–∏–Ω—Å–∫–∏–π –∫–∞–∑–∞—Ö—Å–∫–∏–π –ù–ï —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è –∫–∞–∫ –∫–∞–∑–∞—Ö—Å–∫–∏–π")
    print("3. –ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–∞—Ç–∏–Ω—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã –≤ –∫–æ—Ä–ø—É—Å")
    print("4. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—é")

if __name__ == "__main__":
    test_latin_kazakh()
